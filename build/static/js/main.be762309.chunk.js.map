{"version":3,"sources":["services/numbers.js","components/Filter.js","components/AddPeopleForm.js","components/Contact.js","components/Contacts.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","numberServices","getNumbers","axios","get","then","response","data","addNumber","number","post","deleteNumber","id","delete","updateNumber","put","Filter","filter","eventHandler","value","onChange","AddPeopleForm","handleFormSubmit","nameValue","handleNewName","numberValue","handleNewNumber","onSubmit","type","Contact","name","deletePerson","onClick","Contacts","contacts","deleteHandler","map","contact","Notification","message","isError","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","peopleFilter","setPeopleFilter","notification","setNotification","setIsError","filteredPeople","person","toLowerCase","includes","useEffect","initialNumbers","event","target","preventDefault","find","window","confirm","updatedPerson","setTimeout","catch","error","p","newContact","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be762309.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getNumbers = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst addNumber = (number) => {\n  const request = axios.post(baseUrl, number);\n  return request.then((response) => response.data);\n};\n\nconst deleteNumber = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst updateNumber = (id, number) => {\n  const request = axios.put(`${baseUrl}/${id}`, number);\n  return request.then((response) => response.data);\n};\n\nconst numberServices = {\n  getNumbers,\n  addNumber,\n  deleteNumber,\n  updateNumber,\n};\n\nexport default numberServices;\n","import React from \"react\";\n\nconst Filter = ({ filter, eventHandler }) => {\n  return (\n    <div>\n      <label>\n        filter shown with <input value={filter} onChange={eventHandler} />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst AddPeopleForm = ({\n  handleFormSubmit,\n  nameValue,\n  handleNewName,\n  numberValue,\n  handleNewNumber,\n}) => {\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <div>\n        name: <input value={nameValue} onChange={handleNewName} />\n      </div>\n      <div>\n        number: <input value={numberValue} onChange={handleNewNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddPeopleForm;\n","import React from \"react\";\n\nconst Contact = ({ name, number, deletePerson }) => {\n  return (\n    <li>\n      {name} {number}\n      <button onClick={deletePerson}>delete</button>\n    </li>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport Contact from \"./Contact\";\n\nconst Contacts = ({ contacts, deleteHandler }) => {\n  return (\n    <ul>\n      {contacts.map((contact) => (\n        <Contact\n          key={contact.name}\n          name={contact.name}\n          number={contact.number}\n          deletePerson={() => deleteHandler(contact.id, contact.name)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\n\nconst Notification = ({ message, isError }) => {\n  if (!message) return null;\n\n  if (isError) return <div className=\"error\">{message}</div>;\n\n  return <div className=\"notification\">{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport numberServices from \"./services/numbers\";\nimport Filter from \"./components/Filter\";\nimport AddPeopleForm from \"./components/AddPeopleForm\";\nimport Contacts from \"./components/Contacts\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [peopleFilter, setPeopleFilter] = useState(\"\");\n  const [notification, setNotification] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleDeletePerson = (id, name) => {\n    const checkDelete = window.confirm(`Do you really want to delete ${name}?`);\n\n    if (checkDelete) {\n      numberServices.deleteNumber(id).then(() => {\n        setPersons(persons.filter((person) => person.id !== id));\n        setNotification(`${name} was successfully deleted!`);\n        setTimeout(() => {\n          setNotification(\"\");\n        }, 5000);\n      });\n    }\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const person = persons.find((person) => person.name === newName);\n\n    if (person) {\n      const updateNumber = window.confirm(\n        `${newName} is already added to phonebook.  Would you like to update their information?`\n      );\n\n      if (updateNumber) {\n        numberServices\n          .updateNumber(person.id, { ...person, number: newNumber })\n          .then((updatedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === updatedPerson.id ? updatedPerson : person\n              )\n            );\n            setNotification(`${person.name} was successfully updated!`);\n            setTimeout(() => {\n              setNotification(\"\");\n            }, 5000);\n          })\n          .catch((error) => {\n            setIsError(true);\n            setNotification(\n              `${person.name} was already deleted from the server`\n            );\n\n            setPersons(persons.filter((p) => p.id !== person.id));\n\n            setTimeout(() => {\n              setNotification(\"\");\n              setIsError(false);\n            }, 5000);\n          });\n      }\n    } else {\n      numberServices\n        .addNumber({ name: newName, number: newNumber })\n        .then((newContact) => {\n          setPersons(persons.concat(newContact));\n          setNotification(`${newContact.name} was added successfully!`);\n          setTimeout(() => {\n            setNotification(\"\");\n          }, 5000);\n        });\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const filterPhonebook = (event) => {\n    setPeopleFilter(event.target.value.toLowerCase());\n  };\n\n  const hook = () => {\n    numberServices\n      .getNumbers()\n      .then((initialNumbers) => setPersons(initialNumbers));\n  };\n\n  const filteredPeople = persons.filter((person) =>\n    person.name.toLowerCase().includes(peopleFilter)\n  );\n\n  useEffect(hook, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} isError={isError} />\n      <Filter filter={peopleFilter} eventHandler={filterPhonebook} />\n      <AddPeopleForm\n        handleFormSubmit={handleFormSubmit}\n        nameValue={newName}\n        handleNewName={handleNewName}\n        numberValue={newNumber}\n        handleNewNumber={handleNewNumber}\n      />\n      <h2>Numbers</h2>\n      <Contacts deleteHandler={handleDeletePerson} contacts={filteredPeople} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}